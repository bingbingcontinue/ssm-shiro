<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

<!--    扫描组件（除了控制层）-->
    <context:component-scan base-package="com.aos">
            <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


<!--    配置数据源-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
            <property name="driverClassName" value="${jdbc.driver}"/>
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
    </bean>


<!--    配置事物管理器-->
<!--    将使用注解@Transactional标识的方法或类中所有的方法进行事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

<!--    开启事务注解驱动-->
    <tx:annotation-driven transaction-manager="transactionManager"/>


<!--    spring整合mybatis,配置sqlSessionFactoryBean,可以直接在spring的IOC中获取sqlSessionFactory-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
<!--        设置mybatis的核心配置文件路径-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
<!--        设置数据源-->
        <property name="dataSource" ref="dataSource"/>
<!--        设置类型别名所对应的包-->
        <property name="typeAliasesPackage" value="com.aos.pojo"/>
<!--        设置映射文件xml的路径，只有映射文件的包和mapper接口的包不一致才需要设置-->
<!--        <property name="mapperLocations" value="classpath:com/aos/mapper/*.xml"/>-->
    </bean>

<!--    mapper接口的自动扫描，-->
<!--    将指定mapper下的所有接口，通过上述SqlSessionFactory提供的SqlSession对象创建mapper接口的代理实现类对象，注入到spring的IOC中移交管理-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <property name="basePackage" value="com.aos.mapper"/>
    </bean>

    <import resource="classpath:spring_shiro.xml"/>














</beans>